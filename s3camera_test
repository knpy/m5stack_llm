// カメラ表示だけの最小限テストコード（イメージ）
#include <M5Unified.h>

void setup() {
    auto cfg = M5.config();
    cfg.internal_camera.enabled = true;
    // 必要に応じてカメラのフレームサイズやピクセルフォーマットを設定
    // cfg.internal_camera.frame_size = m5gfx::JPEG_QVGA; // 例: 320x240
    // cfg.internal_camera.pixel_format = m5gfx:: περίπου;  // 例: RGB565
    M5.begin(cfg);

    M5.Display.setTextSize(2);
    Serial.begin(115200);

    if (!M5.In_Camera.isAvailable()) { // ★★★ API名確認 ★★★
        Serial.println("Camera not available!");
        M5.Display.println("Camera FAIL");
        while(1);
    }
    M5.Display.println("Camera OK. Displaying...");
}

void loop() {
    // ★★★ フレーム取得API名と型を確認 ★★★
    auto fb = M5.In_Camera.getFramebuffer();
    if (fb && fb->get()) {
        // ★★★ フレームバッファのピクセルフォーマットに合わせてpushImageを呼び出す ★★★
        // 例: もしフレームバッファがRGB565なら
        M5.Display.pushImage(0, 0, fb->width(), fb->height(), (uint16_t*)fb->get());
        // 例: もしJPEGなら M5.Display.drawJpg(fb->get(), fb->len(), 0, 0); など

        M5.In_Camera.releaseFramebuffer(fb); // ★★★ フレーム解放API名を確認 ★★★
    } else {
        Serial.println("Failed to get frame");
    }
    delay(30); // 描画間隔
}
